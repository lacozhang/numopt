// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: matrix.proto

#ifndef PROTOBUF_matrix_2eproto__INCLUDED
#define PROTOBUF_matrix_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "util/proto/range.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_matrix_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMatrixInfoImpl();
void InitDefaultsMatrixInfo();
inline void InitDefaults() {
  InitDefaultsMatrixInfo();
}
}  // namespace protobuf_matrix_2eproto
namespace mltools {
class MatrixInfo;
class MatrixInfoDefaultTypeInternal;
extern MatrixInfoDefaultTypeInternal _MatrixInfo_default_instance_;
}  // namespace mltools
namespace mltools {

enum MatrixInfo_Type {
  MatrixInfo_Type_DENSE = 1,
  MatrixInfo_Type_SPARSE = 2,
  MatrixInfo_Type_SPARSE_BINARY = 3
};
bool MatrixInfo_Type_IsValid(int value);
const MatrixInfo_Type MatrixInfo_Type_Type_MIN = MatrixInfo_Type_DENSE;
const MatrixInfo_Type MatrixInfo_Type_Type_MAX = MatrixInfo_Type_SPARSE_BINARY;
const int MatrixInfo_Type_Type_ARRAYSIZE = MatrixInfo_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatrixInfo_Type_descriptor();
inline const ::std::string& MatrixInfo_Type_Name(MatrixInfo_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatrixInfo_Type_descriptor(), value);
}
inline bool MatrixInfo_Type_Parse(
    const ::std::string& name, MatrixInfo_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatrixInfo_Type>(
    MatrixInfo_Type_descriptor(), name, value);
}
// ===================================================================

class MatrixInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mltools.MatrixInfo) */ {
 public:
  MatrixInfo();
  virtual ~MatrixInfo();

  MatrixInfo(const MatrixInfo& from);

  inline MatrixInfo& operator=(const MatrixInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatrixInfo(MatrixInfo&& from) noexcept
    : MatrixInfo() {
    *this = ::std::move(from);
  }

  inline MatrixInfo& operator=(MatrixInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatrixInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatrixInfo* internal_default_instance() {
    return reinterpret_cast<const MatrixInfo*>(
               &_MatrixInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MatrixInfo* other);
  friend void swap(MatrixInfo& a, MatrixInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatrixInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MatrixInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatrixInfo& from);
  void MergeFrom(const MatrixInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatrixInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MatrixInfo_Type Type;
  static const Type DENSE =
    MatrixInfo_Type_DENSE;
  static const Type SPARSE =
    MatrixInfo_Type_SPARSE;
  static const Type SPARSE_BINARY =
    MatrixInfo_Type_SPARSE_BINARY;
  static inline bool Type_IsValid(int value) {
    return MatrixInfo_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MatrixInfo_Type_Type_MIN;
  static const Type Type_MAX =
    MatrixInfo_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MatrixInfo_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MatrixInfo_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MatrixInfo_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MatrixInfo_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .mltools.PbRange row = 4;
  bool has_row() const;
  void clear_row();
  static const int kRowFieldNumber = 4;
  const ::mltools::PbRange& row() const;
  ::mltools::PbRange* release_row();
  ::mltools::PbRange* mutable_row();
  void set_allocated_row(::mltools::PbRange* row);

  // required .mltools.PbRange col = 5;
  bool has_col() const;
  void clear_col();
  static const int kColFieldNumber = 5;
  const ::mltools::PbRange& col() const;
  ::mltools::PbRange* release_col();
  ::mltools::PbRange* mutable_col();
  void set_allocated_col(::mltools::PbRange* col);

  // required bool row_major = 2;
  bool has_row_major() const;
  void clear_row_major();
  static const int kRowMajorFieldNumber = 2;
  bool row_major() const;
  void set_row_major(bool value);

  // optional int32 grp_id = 3;
  bool has_grp_id() const;
  void clear_grp_id();
  static const int kGrpIdFieldNumber = 3;
  ::google::protobuf::int32 grp_id() const;
  void set_grp_id(::google::protobuf::int32 value);

  // optional uint64 nnz = 6;
  bool has_nnz() const;
  void clear_nnz();
  static const int kNnzFieldNumber = 6;
  ::google::protobuf::uint64 nnz() const;
  void set_nnz(::google::protobuf::uint64 value);

  // optional uint32 sizeof_idx = 7;
  bool has_sizeof_idx() const;
  void clear_sizeof_idx();
  static const int kSizeofIdxFieldNumber = 7;
  ::google::protobuf::uint32 sizeof_idx() const;
  void set_sizeof_idx(::google::protobuf::uint32 value);

  // optional uint32 sizeof_val = 8;
  bool has_sizeof_val() const;
  void clear_sizeof_val();
  static const int kSizeofValFieldNumber = 8;
  ::google::protobuf::uint32 sizeof_val() const;
  void set_sizeof_val(::google::protobuf::uint32 value);

  // required .mltools.MatrixInfo.Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::mltools::MatrixInfo_Type type() const;
  void set_type(::mltools::MatrixInfo_Type value);

  // @@protoc_insertion_point(class_scope:mltools.MatrixInfo)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_row_major();
  void clear_has_row_major();
  void set_has_grp_id();
  void clear_has_grp_id();
  void set_has_row();
  void clear_has_row();
  void set_has_col();
  void clear_has_col();
  void set_has_nnz();
  void clear_has_nnz();
  void set_has_sizeof_idx();
  void clear_has_sizeof_idx();
  void set_has_sizeof_val();
  void clear_has_sizeof_val();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::mltools::PbRange* row_;
  ::mltools::PbRange* col_;
  bool row_major_;
  ::google::protobuf::int32 grp_id_;
  ::google::protobuf::uint64 nnz_;
  ::google::protobuf::uint32 sizeof_idx_;
  ::google::protobuf::uint32 sizeof_val_;
  int type_;
  friend struct ::protobuf_matrix_2eproto::TableStruct;
  friend void ::protobuf_matrix_2eproto::InitDefaultsMatrixInfoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MatrixInfo

// required .mltools.MatrixInfo.Type type = 1;
inline bool MatrixInfo::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MatrixInfo::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MatrixInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MatrixInfo::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::mltools::MatrixInfo_Type MatrixInfo::type() const {
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.type)
  return static_cast< ::mltools::MatrixInfo_Type >(type_);
}
inline void MatrixInfo::set_type(::mltools::MatrixInfo_Type value) {
  assert(::mltools::MatrixInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:mltools.MatrixInfo.type)
}

// required bool row_major = 2;
inline bool MatrixInfo::has_row_major() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MatrixInfo::set_has_row_major() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MatrixInfo::clear_has_row_major() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MatrixInfo::clear_row_major() {
  row_major_ = false;
  clear_has_row_major();
}
inline bool MatrixInfo::row_major() const {
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.row_major)
  return row_major_;
}
inline void MatrixInfo::set_row_major(bool value) {
  set_has_row_major();
  row_major_ = value;
  // @@protoc_insertion_point(field_set:mltools.MatrixInfo.row_major)
}

// optional int32 grp_id = 3;
inline bool MatrixInfo::has_grp_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MatrixInfo::set_has_grp_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MatrixInfo::clear_has_grp_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MatrixInfo::clear_grp_id() {
  grp_id_ = 0;
  clear_has_grp_id();
}
inline ::google::protobuf::int32 MatrixInfo::grp_id() const {
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.grp_id)
  return grp_id_;
}
inline void MatrixInfo::set_grp_id(::google::protobuf::int32 value) {
  set_has_grp_id();
  grp_id_ = value;
  // @@protoc_insertion_point(field_set:mltools.MatrixInfo.grp_id)
}

// required .mltools.PbRange row = 4;
inline bool MatrixInfo::has_row() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatrixInfo::set_has_row() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatrixInfo::clear_has_row() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::mltools::PbRange& MatrixInfo::row() const {
  const ::mltools::PbRange* p = row_;
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.row)
  return p != NULL ? *p : *reinterpret_cast<const ::mltools::PbRange*>(
      &::mltools::_PbRange_default_instance_);
}
inline ::mltools::PbRange* MatrixInfo::release_row() {
  // @@protoc_insertion_point(field_release:mltools.MatrixInfo.row)
  clear_has_row();
  ::mltools::PbRange* temp = row_;
  row_ = NULL;
  return temp;
}
inline ::mltools::PbRange* MatrixInfo::mutable_row() {
  set_has_row();
  if (row_ == NULL) {
    row_ = new ::mltools::PbRange;
  }
  // @@protoc_insertion_point(field_mutable:mltools.MatrixInfo.row)
  return row_;
}
inline void MatrixInfo::set_allocated_row(::mltools::PbRange* row) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(row_);
  }
  if (row) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      row = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, row, submessage_arena);
    }
    set_has_row();
  } else {
    clear_has_row();
  }
  row_ = row;
  // @@protoc_insertion_point(field_set_allocated:mltools.MatrixInfo.row)
}

// required .mltools.PbRange col = 5;
inline bool MatrixInfo::has_col() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MatrixInfo::set_has_col() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MatrixInfo::clear_has_col() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::mltools::PbRange& MatrixInfo::col() const {
  const ::mltools::PbRange* p = col_;
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.col)
  return p != NULL ? *p : *reinterpret_cast<const ::mltools::PbRange*>(
      &::mltools::_PbRange_default_instance_);
}
inline ::mltools::PbRange* MatrixInfo::release_col() {
  // @@protoc_insertion_point(field_release:mltools.MatrixInfo.col)
  clear_has_col();
  ::mltools::PbRange* temp = col_;
  col_ = NULL;
  return temp;
}
inline ::mltools::PbRange* MatrixInfo::mutable_col() {
  set_has_col();
  if (col_ == NULL) {
    col_ = new ::mltools::PbRange;
  }
  // @@protoc_insertion_point(field_mutable:mltools.MatrixInfo.col)
  return col_;
}
inline void MatrixInfo::set_allocated_col(::mltools::PbRange* col) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(col_);
  }
  if (col) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      col = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, col, submessage_arena);
    }
    set_has_col();
  } else {
    clear_has_col();
  }
  col_ = col;
  // @@protoc_insertion_point(field_set_allocated:mltools.MatrixInfo.col)
}

// optional uint64 nnz = 6;
inline bool MatrixInfo::has_nnz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MatrixInfo::set_has_nnz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MatrixInfo::clear_has_nnz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MatrixInfo::clear_nnz() {
  nnz_ = GOOGLE_ULONGLONG(0);
  clear_has_nnz();
}
inline ::google::protobuf::uint64 MatrixInfo::nnz() const {
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.nnz)
  return nnz_;
}
inline void MatrixInfo::set_nnz(::google::protobuf::uint64 value) {
  set_has_nnz();
  nnz_ = value;
  // @@protoc_insertion_point(field_set:mltools.MatrixInfo.nnz)
}

// optional uint32 sizeof_idx = 7;
inline bool MatrixInfo::has_sizeof_idx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MatrixInfo::set_has_sizeof_idx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MatrixInfo::clear_has_sizeof_idx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MatrixInfo::clear_sizeof_idx() {
  sizeof_idx_ = 0u;
  clear_has_sizeof_idx();
}
inline ::google::protobuf::uint32 MatrixInfo::sizeof_idx() const {
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.sizeof_idx)
  return sizeof_idx_;
}
inline void MatrixInfo::set_sizeof_idx(::google::protobuf::uint32 value) {
  set_has_sizeof_idx();
  sizeof_idx_ = value;
  // @@protoc_insertion_point(field_set:mltools.MatrixInfo.sizeof_idx)
}

// optional uint32 sizeof_val = 8;
inline bool MatrixInfo::has_sizeof_val() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MatrixInfo::set_has_sizeof_val() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MatrixInfo::clear_has_sizeof_val() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MatrixInfo::clear_sizeof_val() {
  sizeof_val_ = 0u;
  clear_has_sizeof_val();
}
inline ::google::protobuf::uint32 MatrixInfo::sizeof_val() const {
  // @@protoc_insertion_point(field_get:mltools.MatrixInfo.sizeof_val)
  return sizeof_val_;
}
inline void MatrixInfo::set_sizeof_val(::google::protobuf::uint32 value) {
  set_has_sizeof_val();
  sizeof_val_ = value;
  // @@protoc_insertion_point(field_set:mltools.MatrixInfo.sizeof_val)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mltools

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mltools::MatrixInfo_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mltools::MatrixInfo_Type>() {
  return ::mltools::MatrixInfo_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_matrix_2eproto__INCLUDED
