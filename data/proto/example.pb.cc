// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: example.proto

#include "example.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace mltools {
class SlotInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SlotInfo>
      _instance;
} _SlotInfo_default_instance_;
class ExampleInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExampleInfo>
      _instance;
} _ExampleInfo_default_instance_;
class SlotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Slot>
      _instance;
} _Slot_default_instance_;
class ExampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Example>
      _instance;
} _Example_default_instance_;
}  // namespace mltools
namespace protobuf_example_2eproto {
void InitDefaultsSlotInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mltools::_SlotInfo_default_instance_;
    new (ptr) ::mltools::SlotInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mltools::SlotInfo::InitAsDefaultInstance();
}

void InitDefaultsSlotInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSlotInfoImpl);
}

void InitDefaultsExampleInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_example_2eproto::InitDefaultsSlotInfo();
  {
    void* ptr = &::mltools::_ExampleInfo_default_instance_;
    new (ptr) ::mltools::ExampleInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mltools::ExampleInfo::InitAsDefaultInstance();
}

void InitDefaultsExampleInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExampleInfoImpl);
}

void InitDefaultsSlotImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mltools::_Slot_default_instance_;
    new (ptr) ::mltools::Slot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mltools::Slot::InitAsDefaultInstance();
}

void InitDefaultsSlot() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSlotImpl);
}

void InitDefaultsExampleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_example_2eproto::InitDefaultsSlot();
  {
    void* ptr = &::mltools::_Example_default_instance_;
    new (ptr) ::mltools::Example();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mltools::Example::InitAsDefaultInstance();
}

void InitDefaultsExample() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExampleImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, min_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, max_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, nnz_ele_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::SlotInfo, nnz_ex_),
  4,
  3,
  5,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::ExampleInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::ExampleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::ExampleInfo, slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::ExampleInfo, num_ex_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Slot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Slot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Slot, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Slot, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Slot, val_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Example, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Example, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::Example, slot_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::mltools::SlotInfo)},
  { 17, 24, sizeof(::mltools::ExampleInfo)},
  { 26, 34, sizeof(::mltools::Slot)},
  { 37, 43, sizeof(::mltools::Example)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mltools::_SlotInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mltools::_ExampleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mltools::_Slot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mltools::_Example_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "example.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rexample.proto\022\007mltools\"\315\001\n\010SlotInfo\022(\n"
      "\006format\030\001 \001(\0162\030.mltools.SlotInfo.Format\022"
      "\n\n\002id\030\002 \001(\005\022%\n\007min_key\030\003 \001(\004:\0241844674407"
      "3709551615\022\017\n\007max_key\030\004 \001(\004\022\017\n\007nnz_ele\030\005"
      " \001(\004\022\016\n\006nnz_ex\030\006 \001(\004\"2\n\006Format\022\t\n\005DENSE\020"
      "\001\022\n\n\006SPARSE\020\002\022\021\n\rSPARSE_BINARY\020\003\">\n\013Exam"
      "pleInfo\022\037\n\004slot\030\001 \003(\0132\021.mltools.SlotInfo"
      "\022\016\n\006num_ex\030\002 \001(\004\"4\n\004Slot\022\n\n\002id\030\001 \001(\005\022\017\n\003"
      "key\030\002 \003(\004B\002\020\001\022\017\n\003val\030\003 \003(\002B\002\020\001\"&\n\007Exampl"
      "e\022\033\n\004slot\030\001 \003(\0132\r.mltools.Slot"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 390);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "example.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_example_2eproto
namespace mltools {
const ::google::protobuf::EnumDescriptor* SlotInfo_Format_descriptor() {
  protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_example_2eproto::file_level_enum_descriptors[0];
}
bool SlotInfo_Format_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SlotInfo_Format SlotInfo::DENSE;
const SlotInfo_Format SlotInfo::SPARSE;
const SlotInfo_Format SlotInfo::SPARSE_BINARY;
const SlotInfo_Format SlotInfo::Format_MIN;
const SlotInfo_Format SlotInfo::Format_MAX;
const int SlotInfo::Format_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SlotInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SlotInfo::kFormatFieldNumber;
const int SlotInfo::kIdFieldNumber;
const int SlotInfo::kMinKeyFieldNumber;
const int SlotInfo::kMaxKeyFieldNumber;
const int SlotInfo::kNnzEleFieldNumber;
const int SlotInfo::kNnzExFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlotInfo::SlotInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_example_2eproto::InitDefaultsSlotInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mltools.SlotInfo)
}
SlotInfo::SlotInfo(const SlotInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_key_, &from.max_key_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_key_) -
    reinterpret_cast<char*>(&max_key_)) + sizeof(min_key_));
  // @@protoc_insertion_point(copy_constructor:mltools.SlotInfo)
}

void SlotInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&max_key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&max_key_)) + sizeof(id_));
  format_ = 1;
  min_key_ = GOOGLE_ULONGLONG(18446744073709551615);
}

SlotInfo::~SlotInfo() {
  // @@protoc_insertion_point(destructor:mltools.SlotInfo)
  SharedDtor();
}

void SlotInfo::SharedDtor() {
}

void SlotInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SlotInfo::descriptor() {
  ::protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SlotInfo& SlotInfo::default_instance() {
  ::protobuf_example_2eproto::InitDefaultsSlotInfo();
  return *internal_default_instance();
}

SlotInfo* SlotInfo::New(::google::protobuf::Arena* arena) const {
  SlotInfo* n = new SlotInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SlotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mltools.SlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 63u) {
    ::memset(&max_key_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&id_) -
        reinterpret_cast<char*>(&max_key_)) + sizeof(id_));
    format_ = 1;
    min_key_ = GOOGLE_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SlotInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mltools.SlotInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mltools.SlotInfo.Format format = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mltools::SlotInfo_Format_IsValid(value)) {
            set_format(static_cast< ::mltools::SlotInfo_Format >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 min_key = 3 [default = 18446744073709551615];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_min_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &min_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 max_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_max_key();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 nnz_ele = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_nnz_ele();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nnz_ele_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 nnz_ex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_nnz_ex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nnz_ex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mltools.SlotInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mltools.SlotInfo)
  return false;
#undef DO_
}

void SlotInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mltools.SlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mltools.SlotInfo.Format format = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional uint64 min_key = 3 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->min_key(), output);
  }

  // optional uint64 max_key = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->max_key(), output);
  }

  // optional uint64 nnz_ele = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->nnz_ele(), output);
  }

  // optional uint64 nnz_ex = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->nnz_ex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mltools.SlotInfo)
}

::google::protobuf::uint8* SlotInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mltools.SlotInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mltools.SlotInfo.Format format = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional uint64 min_key = 3 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->min_key(), target);
  }

  // optional uint64 max_key = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->max_key(), target);
  }

  // optional uint64 nnz_ele = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->nnz_ele(), target);
  }

  // optional uint64 nnz_ex = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->nnz_ex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mltools.SlotInfo)
  return target;
}

size_t SlotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mltools.SlotInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional uint64 max_key = 4;
    if (has_max_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_key());
    }

    // optional uint64 nnz_ele = 5;
    if (has_nnz_ele()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nnz_ele());
    }

    // optional uint64 nnz_ex = 6;
    if (has_nnz_ex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nnz_ex());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .mltools.SlotInfo.Format format = 1;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
    }

    // optional uint64 min_key = 3 [default = 18446744073709551615];
    if (has_min_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->min_key());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlotInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mltools.SlotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SlotInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SlotInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mltools.SlotInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mltools.SlotInfo)
    MergeFrom(*source);
  }
}

void SlotInfo::MergeFrom(const SlotInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mltools.SlotInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      max_key_ = from.max_key_;
    }
    if (cached_has_bits & 0x00000002u) {
      nnz_ele_ = from.nnz_ele_;
    }
    if (cached_has_bits & 0x00000004u) {
      nnz_ex_ = from.nnz_ex_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      format_ = from.format_;
    }
    if (cached_has_bits & 0x00000020u) {
      min_key_ = from.min_key_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SlotInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mltools.SlotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlotInfo::CopyFrom(const SlotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mltools.SlotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlotInfo::IsInitialized() const {
  return true;
}

void SlotInfo::Swap(SlotInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlotInfo::InternalSwap(SlotInfo* other) {
  using std::swap;
  swap(max_key_, other->max_key_);
  swap(nnz_ele_, other->nnz_ele_);
  swap(nnz_ex_, other->nnz_ex_);
  swap(id_, other->id_);
  swap(format_, other->format_);
  swap(min_key_, other->min_key_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SlotInfo::GetMetadata() const {
  protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExampleInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExampleInfo::kSlotFieldNumber;
const int ExampleInfo::kNumExFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExampleInfo::ExampleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_example_2eproto::InitDefaultsExampleInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mltools.ExampleInfo)
}
ExampleInfo::ExampleInfo(const ExampleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      slot_(from.slot_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ex_ = from.num_ex_;
  // @@protoc_insertion_point(copy_constructor:mltools.ExampleInfo)
}

void ExampleInfo::SharedCtor() {
  _cached_size_ = 0;
  num_ex_ = GOOGLE_ULONGLONG(0);
}

ExampleInfo::~ExampleInfo() {
  // @@protoc_insertion_point(destructor:mltools.ExampleInfo)
  SharedDtor();
}

void ExampleInfo::SharedDtor() {
}

void ExampleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExampleInfo::descriptor() {
  ::protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExampleInfo& ExampleInfo::default_instance() {
  ::protobuf_example_2eproto::InitDefaultsExampleInfo();
  return *internal_default_instance();
}

ExampleInfo* ExampleInfo::New(::google::protobuf::Arena* arena) const {
  ExampleInfo* n = new ExampleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExampleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:mltools.ExampleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_.Clear();
  num_ex_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ExampleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mltools.ExampleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mltools.SlotInfo slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_slot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 num_ex = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_num_ex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_ex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mltools.ExampleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mltools.ExampleInfo)
  return false;
#undef DO_
}

void ExampleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mltools.ExampleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mltools.SlotInfo slot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->slot(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 num_ex = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->num_ex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mltools.ExampleInfo)
}

::google::protobuf::uint8* ExampleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mltools.ExampleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mltools.SlotInfo slot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->slot(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint64 num_ex = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->num_ex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mltools.ExampleInfo)
  return target;
}

size_t ExampleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mltools.ExampleInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mltools.SlotInfo slot = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->slot_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->slot(static_cast<int>(i)));
    }
  }

  // optional uint64 num_ex = 2;
  if (has_num_ex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_ex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExampleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mltools.ExampleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ExampleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExampleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mltools.ExampleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mltools.ExampleInfo)
    MergeFrom(*source);
  }
}

void ExampleInfo::MergeFrom(const ExampleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mltools.ExampleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slot_.MergeFrom(from.slot_);
  if (from.has_num_ex()) {
    set_num_ex(from.num_ex());
  }
}

void ExampleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mltools.ExampleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExampleInfo::CopyFrom(const ExampleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mltools.ExampleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExampleInfo::IsInitialized() const {
  return true;
}

void ExampleInfo::Swap(ExampleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExampleInfo::InternalSwap(ExampleInfo* other) {
  using std::swap;
  slot_.InternalSwap(&other->slot_);
  swap(num_ex_, other->num_ex_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExampleInfo::GetMetadata() const {
  protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Slot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Slot::kIdFieldNumber;
const int Slot::kKeyFieldNumber;
const int Slot::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Slot::Slot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_example_2eproto::InitDefaultsSlot();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mltools.Slot)
}
Slot::Slot(const Slot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      key_(from.key_),
      val_(from.val_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mltools.Slot)
}

void Slot::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
}

Slot::~Slot() {
  // @@protoc_insertion_point(destructor:mltools.Slot)
  SharedDtor();
}

void Slot::SharedDtor() {
}

void Slot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Slot::descriptor() {
  ::protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Slot& Slot::default_instance() {
  ::protobuf_example_2eproto::InitDefaultsSlot();
  return *internal_default_instance();
}

Slot* Slot::New(::google::protobuf::Arena* arena) const {
  Slot* n = new Slot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Slot::Clear() {
// @@protoc_insertion_point(message_clear_start:mltools.Slot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  val_.Clear();
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Slot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mltools.Slot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 key = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_key())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_key())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float val = 3 [packed = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_val())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_val())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mltools.Slot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mltools.Slot)
  return false;
#undef DO_
}

void Slot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mltools.Slot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated uint64 key = 2 [packed = true];
  if (this->key_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _key_cached_byte_size_));
  }
  for (int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->key(i), output);
  }

  // repeated float val = 3 [packed = true];
  if (this->val_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _val_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->val().data(), this->val_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mltools.Slot)
}

::google::protobuf::uint8* Slot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mltools.Slot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated uint64 key = 2 [packed = true];
  if (this->key_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _key_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->key_, target);
  }

  // repeated float val = 3 [packed = true];
  if (this->val_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _val_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->val_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mltools.Slot)
  return target;
}

size_t Slot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mltools.Slot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint64 key = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->key_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _key_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float val = 3 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->val_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _val_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // optional int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Slot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mltools.Slot)
  GOOGLE_DCHECK_NE(&from, this);
  const Slot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Slot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mltools.Slot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mltools.Slot)
    MergeFrom(*source);
  }
}

void Slot::MergeFrom(const Slot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mltools.Slot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  val_.MergeFrom(from.val_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void Slot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mltools.Slot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Slot::CopyFrom(const Slot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mltools.Slot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Slot::IsInitialized() const {
  return true;
}

void Slot::Swap(Slot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Slot::InternalSwap(Slot* other) {
  using std::swap;
  key_.InternalSwap(&other->key_);
  val_.InternalSwap(&other->val_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Slot::GetMetadata() const {
  protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Example::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Example::kSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Example::Example()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_example_2eproto::InitDefaultsExample();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mltools.Example)
}
Example::Example(const Example& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      slot_(from.slot_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mltools.Example)
}

void Example::SharedCtor() {
  _cached_size_ = 0;
}

Example::~Example() {
  // @@protoc_insertion_point(destructor:mltools.Example)
  SharedDtor();
}

void Example::SharedDtor() {
}

void Example::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Example::descriptor() {
  ::protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Example& Example::default_instance() {
  ::protobuf_example_2eproto::InitDefaultsExample();
  return *internal_default_instance();
}

Example* Example::New(::google::protobuf::Arena* arena) const {
  Example* n = new Example;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Example::Clear() {
// @@protoc_insertion_point(message_clear_start:mltools.Example)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Example::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mltools.Example)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mltools.Slot slot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_slot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mltools.Example)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mltools.Example)
  return false;
#undef DO_
}

void Example::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mltools.Example)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mltools.Slot slot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->slot(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mltools.Example)
}

::google::protobuf::uint8* Example::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mltools.Example)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mltools.Slot slot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->slot(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mltools.Example)
  return target;
}

size_t Example::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mltools.Example)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .mltools.Slot slot = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->slot_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->slot(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Example::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mltools.Example)
  GOOGLE_DCHECK_NE(&from, this);
  const Example* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Example>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mltools.Example)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mltools.Example)
    MergeFrom(*source);
  }
}

void Example::MergeFrom(const Example& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mltools.Example)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slot_.MergeFrom(from.slot_);
}

void Example::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mltools.Example)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Example::CopyFrom(const Example& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mltools.Example)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Example::IsInitialized() const {
  return true;
}

void Example::Swap(Example* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Example::InternalSwap(Example* other) {
  using std::swap;
  slot_.InternalSwap(&other->slot_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Example::GetMetadata() const {
  protobuf_example_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_example_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mltools

// @@protoc_insertion_point(global_scope)
