// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataconfig.proto

#include "dataconfig.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace mltools {
class DataConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataConfig>
      _instance;
} _DataConfig_default_instance_;
class HDFSConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HDFSConfig>
      _instance;
} _HDFSConfig_default_instance_;
}  // namespace mltools
namespace protobuf_dataconfig_2eproto {
void InitDefaultsDataConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_util_2fproto_2frange_2eproto::InitDefaultsPbRange();
  protobuf_dataconfig_2eproto::InitDefaultsHDFSConfig();
  {
    void* ptr = &::mltools::_DataConfig_default_instance_;
    new (ptr) ::mltools::DataConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mltools::DataConfig::InitAsDefaultInstance();
}

void InitDefaultsDataConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataConfigImpl);
}

void InitDefaultsHDFSConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mltools::_HDFSConfig_default_instance_;
    new (ptr) ::mltools::HDFSConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mltools::HDFSConfig::InitAsDefaultInstance();
}

void InitDefaultsHDFSConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHDFSConfigImpl);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, ignore_feature_group_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, maximum_files_per_worker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, maximum_examples_per_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, shuffle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, hdfs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::DataConfig, replica_),
  5,
  6,
  ~0u,
  0,
  2,
  7,
  8,
  3,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::HDFSConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::HDFSConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::HDFSConfig, home_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::HDFSConfig, ugi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mltools::HDFSConfig, namenode_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::mltools::DataConfig)},
  { 25, 33, sizeof(::mltools::HDFSConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mltools::_DataConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mltools::_HDFSConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dataconfig.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020dataconfig.proto\022\007mltools\032\026util/proto/"
      "range.proto\"\357\003\n\nDataConfig\022.\n\006format\030\001 \001"
      "(\0162\036.mltools.DataConfig.DataFormat\022,\n\004te"
      "xt\030\002 \001(\0162\036.mltools.DataConfig.TextFormat"
      "\022\014\n\004file\030\003 \003(\t\022\037\n\005range\030\004 \001(\0132\020.mltools."
      "PbRange\022\034\n\024ignore_feature_group\030\005 \001(\010\022$\n"
      "\030maximum_files_per_worker\030\006 \001(\005:\002-1\022%\n\031m"
      "aximum_examples_per_file\030\007 \001(\005:\002-1\022\026\n\007sh"
      "uffle\030\010 \001(\010:\005false\022!\n\004hdfs\030\t \001(\0132\023.mltoo"
      "ls.HDFSConfig\022\022\n\007replica\030\n \001(\005:\0011\"*\n\nDat"
      "aFormat\022\010\n\004TEXT\020\001\022\t\n\005PROTO\020\002\022\007\n\003BIN\020\003\"n\n"
      "\nTextFormat\022\t\n\005DENSE\020\001\022\n\n\006SPARSE\020\002\022\021\n\rSP"
      "ARSE_BINARY\020\003\022\t\n\005ADFEA\020\004\022\n\n\006LIBSVM\020\005\022\013\n\007"
      "TERAFEA\020\006\022\006\n\002VW\020\007\022\n\n\006CRITEO\020\010\"9\n\nHDFSCon"
      "fig\022\014\n\004home\030\001 \001(\t\022\013\n\003ugi\030\002 \001(\t\022\020\n\010nameno"
      "de\030\003 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 608);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dataconfig.proto", &protobuf_RegisterTypes);
  ::protobuf_util_2fproto_2frange_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dataconfig_2eproto
namespace mltools {
const ::google::protobuf::EnumDescriptor* DataConfig_DataFormat_descriptor() {
  protobuf_dataconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataconfig_2eproto::file_level_enum_descriptors[0];
}
bool DataConfig_DataFormat_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataConfig_DataFormat DataConfig::TEXT;
const DataConfig_DataFormat DataConfig::PROTO;
const DataConfig_DataFormat DataConfig::BIN;
const DataConfig_DataFormat DataConfig::DataFormat_MIN;
const DataConfig_DataFormat DataConfig::DataFormat_MAX;
const int DataConfig::DataFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DataConfig_TextFormat_descriptor() {
  protobuf_dataconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dataconfig_2eproto::file_level_enum_descriptors[1];
}
bool DataConfig_TextFormat_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DataConfig_TextFormat DataConfig::DENSE;
const DataConfig_TextFormat DataConfig::SPARSE;
const DataConfig_TextFormat DataConfig::SPARSE_BINARY;
const DataConfig_TextFormat DataConfig::ADFEA;
const DataConfig_TextFormat DataConfig::LIBSVM;
const DataConfig_TextFormat DataConfig::TERAFEA;
const DataConfig_TextFormat DataConfig::VW;
const DataConfig_TextFormat DataConfig::CRITEO;
const DataConfig_TextFormat DataConfig::TextFormat_MIN;
const DataConfig_TextFormat DataConfig::TextFormat_MAX;
const int DataConfig::TextFormat_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void DataConfig::InitAsDefaultInstance() {
  ::mltools::_DataConfig_default_instance_._instance.get_mutable()->range_ = const_cast< ::mltools::PbRange*>(
      ::mltools::PbRange::internal_default_instance());
  ::mltools::_DataConfig_default_instance_._instance.get_mutable()->hdfs_ = const_cast< ::mltools::HDFSConfig*>(
      ::mltools::HDFSConfig::internal_default_instance());
}
void DataConfig::clear_range() {
  if (range_ != NULL) range_->Clear();
  clear_has_range();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataConfig::kFormatFieldNumber;
const int DataConfig::kTextFieldNumber;
const int DataConfig::kFileFieldNumber;
const int DataConfig::kRangeFieldNumber;
const int DataConfig::kIgnoreFeatureGroupFieldNumber;
const int DataConfig::kMaximumFilesPerWorkerFieldNumber;
const int DataConfig::kMaximumExamplesPerFileFieldNumber;
const int DataConfig::kShuffleFieldNumber;
const int DataConfig::kHdfsFieldNumber;
const int DataConfig::kReplicaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataConfig::DataConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dataconfig_2eproto::InitDefaultsDataConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mltools.DataConfig)
}
DataConfig::DataConfig(const DataConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      file_(from.file_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_range()) {
    range_ = new ::mltools::PbRange(*from.range_);
  } else {
    range_ = NULL;
  }
  if (from.has_hdfs()) {
    hdfs_ = new ::mltools::HDFSConfig(*from.hdfs_);
  } else {
    hdfs_ = NULL;
  }
  ::memcpy(&ignore_feature_group_, &from.ignore_feature_group_,
    static_cast<size_t>(reinterpret_cast<char*>(&maximum_examples_per_file_) -
    reinterpret_cast<char*>(&ignore_feature_group_)) + sizeof(maximum_examples_per_file_));
  // @@protoc_insertion_point(copy_constructor:mltools.DataConfig)
}

void DataConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shuffle_) -
      reinterpret_cast<char*>(&range_)) + sizeof(shuffle_));
  replica_ = 1;
  format_ = 1;
  text_ = 1;
  maximum_files_per_worker_ = -1;
  maximum_examples_per_file_ = -1;
}

DataConfig::~DataConfig() {
  // @@protoc_insertion_point(destructor:mltools.DataConfig)
  SharedDtor();
}

void DataConfig::SharedDtor() {
  if (this != internal_default_instance()) delete range_;
  if (this != internal_default_instance()) delete hdfs_;
}

void DataConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataConfig::descriptor() {
  ::protobuf_dataconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataConfig& DataConfig::default_instance() {
  ::protobuf_dataconfig_2eproto::InitDefaultsDataConfig();
  return *internal_default_instance();
}

DataConfig* DataConfig::New(::google::protobuf::Arena* arena) const {
  DataConfig* n = new DataConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mltools.DataConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(range_ != NULL);
      range_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(hdfs_ != NULL);
      hdfs_->Clear();
    }
  }
  ::memset(&ignore_feature_group_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shuffle_) -
      reinterpret_cast<char*>(&ignore_feature_group_)) + sizeof(shuffle_));
  if (cached_has_bits & 240u) {
    replica_ = 1;
    format_ = 1;
    text_ = 1;
    maximum_files_per_worker_ = -1;
  }
  maximum_examples_per_file_ = -1;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mltools.DataConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .mltools.DataConfig.DataFormat format = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mltools::DataConfig_DataFormat_IsValid(value)) {
            set_format(static_cast< ::mltools::DataConfig_DataFormat >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mltools.DataConfig.TextFormat text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::mltools::DataConfig_TextFormat_IsValid(value)) {
            set_text(static_cast< ::mltools::DataConfig_TextFormat >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_file()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file(this->file_size() - 1).data(),
            static_cast<int>(this->file(this->file_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mltools.DataConfig.file");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mltools.PbRange range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_feature_group = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_ignore_feature_group();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_feature_group_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 maximum_files_per_worker = 6 [default = -1];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_maximum_files_per_worker();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maximum_files_per_worker_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 maximum_examples_per_file = 7 [default = -1];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_maximum_examples_per_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maximum_examples_per_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool shuffle = 8 [default = false];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_shuffle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shuffle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .mltools.HDFSConfig hdfs = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hdfs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 replica = 10 [default = 1];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_replica();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mltools.DataConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mltools.DataConfig)
  return false;
#undef DO_
}

void DataConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mltools.DataConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mltools.DataConfig.DataFormat format = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->format(), output);
  }

  // optional .mltools.DataConfig.TextFormat text = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->text(), output);
  }

  // repeated string file = 3;
  for (int i = 0, n = this->file_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file(i).data(), static_cast<int>(this->file(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.DataConfig.file");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->file(i), output);
  }

  // optional .mltools.PbRange range = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->range_, output);
  }

  // optional bool ignore_feature_group = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->ignore_feature_group(), output);
  }

  // optional int32 maximum_files_per_worker = 6 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->maximum_files_per_worker(), output);
  }

  // optional int32 maximum_examples_per_file = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->maximum_examples_per_file(), output);
  }

  // optional bool shuffle = 8 [default = false];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->shuffle(), output);
  }

  // optional .mltools.HDFSConfig hdfs = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->hdfs_, output);
  }

  // optional int32 replica = 10 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->replica(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mltools.DataConfig)
}

::google::protobuf::uint8* DataConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mltools.DataConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mltools.DataConfig.DataFormat format = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->format(), target);
  }

  // optional .mltools.DataConfig.TextFormat text = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->text(), target);
  }

  // repeated string file = 3;
  for (int i = 0, n = this->file_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file(i).data(), static_cast<int>(this->file(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.DataConfig.file");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->file(i), target);
  }

  // optional .mltools.PbRange range = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->range_, deterministic, target);
  }

  // optional bool ignore_feature_group = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->ignore_feature_group(), target);
  }

  // optional int32 maximum_files_per_worker = 6 [default = -1];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->maximum_files_per_worker(), target);
  }

  // optional int32 maximum_examples_per_file = 7 [default = -1];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->maximum_examples_per_file(), target);
  }

  // optional bool shuffle = 8 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->shuffle(), target);
  }

  // optional .mltools.HDFSConfig hdfs = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->hdfs_, deterministic, target);
  }

  // optional int32 replica = 10 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->replica(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mltools.DataConfig)
  return target;
}

size_t DataConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mltools.DataConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string file = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->file_size());
  for (int i = 0, n = this->file_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->file(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional .mltools.PbRange range = 4;
    if (has_range()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->range_);
    }

    // optional .mltools.HDFSConfig hdfs = 9;
    if (has_hdfs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->hdfs_);
    }

    // optional bool ignore_feature_group = 5;
    if (has_ignore_feature_group()) {
      total_size += 1 + 1;
    }

    // optional bool shuffle = 8 [default = false];
    if (has_shuffle()) {
      total_size += 1 + 1;
    }

    // optional int32 replica = 10 [default = 1];
    if (has_replica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->replica());
    }

    // optional .mltools.DataConfig.DataFormat format = 1;
    if (has_format()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->format());
    }

    // optional .mltools.DataConfig.TextFormat text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->text());
    }

    // optional int32 maximum_files_per_worker = 6 [default = -1];
    if (has_maximum_files_per_worker()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maximum_files_per_worker());
    }

  }
  // optional int32 maximum_examples_per_file = 7 [default = -1];
  if (has_maximum_examples_per_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maximum_examples_per_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mltools.DataConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DataConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mltools.DataConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mltools.DataConfig)
    MergeFrom(*source);
  }
}

void DataConfig::MergeFrom(const DataConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mltools.DataConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_.MergeFrom(from.file_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_range()->::mltools::PbRange::MergeFrom(from.range());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_hdfs()->::mltools::HDFSConfig::MergeFrom(from.hdfs());
    }
    if (cached_has_bits & 0x00000004u) {
      ignore_feature_group_ = from.ignore_feature_group_;
    }
    if (cached_has_bits & 0x00000008u) {
      shuffle_ = from.shuffle_;
    }
    if (cached_has_bits & 0x00000010u) {
      replica_ = from.replica_;
    }
    if (cached_has_bits & 0x00000020u) {
      format_ = from.format_;
    }
    if (cached_has_bits & 0x00000040u) {
      text_ = from.text_;
    }
    if (cached_has_bits & 0x00000080u) {
      maximum_files_per_worker_ = from.maximum_files_per_worker_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_maximum_examples_per_file(from.maximum_examples_per_file());
  }
}

void DataConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mltools.DataConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataConfig::CopyFrom(const DataConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mltools.DataConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataConfig::IsInitialized() const {
  if (has_range()) {
    if (!this->range_->IsInitialized()) return false;
  }
  return true;
}

void DataConfig::Swap(DataConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataConfig::InternalSwap(DataConfig* other) {
  using std::swap;
  file_.InternalSwap(&other->file_);
  swap(range_, other->range_);
  swap(hdfs_, other->hdfs_);
  swap(ignore_feature_group_, other->ignore_feature_group_);
  swap(shuffle_, other->shuffle_);
  swap(replica_, other->replica_);
  swap(format_, other->format_);
  swap(text_, other->text_);
  swap(maximum_files_per_worker_, other->maximum_files_per_worker_);
  swap(maximum_examples_per_file_, other->maximum_examples_per_file_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataConfig::GetMetadata() const {
  protobuf_dataconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HDFSConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HDFSConfig::kHomeFieldNumber;
const int HDFSConfig::kUgiFieldNumber;
const int HDFSConfig::kNamenodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HDFSConfig::HDFSConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dataconfig_2eproto::InitDefaultsHDFSConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mltools.HDFSConfig)
}
HDFSConfig::HDFSConfig(const HDFSConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  home_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_home()) {
    home_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.home_);
  }
  ugi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ugi()) {
    ugi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ugi_);
  }
  namenode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_namenode()) {
    namenode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namenode_);
  }
  // @@protoc_insertion_point(copy_constructor:mltools.HDFSConfig)
}

void HDFSConfig::SharedCtor() {
  _cached_size_ = 0;
  home_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ugi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namenode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HDFSConfig::~HDFSConfig() {
  // @@protoc_insertion_point(destructor:mltools.HDFSConfig)
  SharedDtor();
}

void HDFSConfig::SharedDtor() {
  home_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ugi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  namenode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HDFSConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HDFSConfig::descriptor() {
  ::protobuf_dataconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HDFSConfig& HDFSConfig::default_instance() {
  ::protobuf_dataconfig_2eproto::InitDefaultsHDFSConfig();
  return *internal_default_instance();
}

HDFSConfig* HDFSConfig::New(::google::protobuf::Arena* arena) const {
  HDFSConfig* n = new HDFSConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HDFSConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:mltools.HDFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!home_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*home_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!ugi_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ugi_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!namenode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*namenode_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HDFSConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mltools.HDFSConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string home = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_home()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->home().data(), static_cast<int>(this->home().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mltools.HDFSConfig.home");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ugi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ugi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ugi().data(), static_cast<int>(this->ugi().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mltools.HDFSConfig.ugi");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string namenode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_namenode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->namenode().data(), static_cast<int>(this->namenode().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "mltools.HDFSConfig.namenode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mltools.HDFSConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mltools.HDFSConfig)
  return false;
#undef DO_
}

void HDFSConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mltools.HDFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string home = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->home().data(), static_cast<int>(this->home().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.HDFSConfig.home");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->home(), output);
  }

  // optional string ugi = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ugi().data(), static_cast<int>(this->ugi().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.HDFSConfig.ugi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ugi(), output);
  }

  // optional string namenode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namenode().data(), static_cast<int>(this->namenode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.HDFSConfig.namenode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->namenode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mltools.HDFSConfig)
}

::google::protobuf::uint8* HDFSConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mltools.HDFSConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string home = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->home().data(), static_cast<int>(this->home().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.HDFSConfig.home");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->home(), target);
  }

  // optional string ugi = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ugi().data(), static_cast<int>(this->ugi().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.HDFSConfig.ugi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ugi(), target);
  }

  // optional string namenode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->namenode().data(), static_cast<int>(this->namenode().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "mltools.HDFSConfig.namenode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->namenode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mltools.HDFSConfig)
  return target;
}

size_t HDFSConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mltools.HDFSConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string home = 1;
    if (has_home()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->home());
    }

    // optional string ugi = 2;
    if (has_ugi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ugi());
    }

    // optional string namenode = 3;
    if (has_namenode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->namenode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HDFSConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mltools.HDFSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const HDFSConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HDFSConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mltools.HDFSConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mltools.HDFSConfig)
    MergeFrom(*source);
  }
}

void HDFSConfig::MergeFrom(const HDFSConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mltools.HDFSConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_home();
      home_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.home_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ugi();
      ugi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ugi_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_namenode();
      namenode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.namenode_);
    }
  }
}

void HDFSConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mltools.HDFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HDFSConfig::CopyFrom(const HDFSConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mltools.HDFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HDFSConfig::IsInitialized() const {
  return true;
}

void HDFSConfig::Swap(HDFSConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HDFSConfig::InternalSwap(HDFSConfig* other) {
  using std::swap;
  home_.Swap(&other->home_);
  ugi_.Swap(&other->ugi_);
  namenode_.Swap(&other->namenode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HDFSConfig::GetMetadata() const {
  protobuf_dataconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mltools

// @@protoc_insertion_point(global_scope)
